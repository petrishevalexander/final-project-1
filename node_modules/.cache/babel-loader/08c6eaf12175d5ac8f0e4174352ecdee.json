{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Documents/epam/final-project/src/Components/PokemonList/PokemonListContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { catchIt, letgo, setPokemons, setCurrentPage } from \"../../redux/pokemonList-reducer\";\nimport axios from \"axios\";\nimport './PokemonList.css';\nimport PokemonList from './PokemonList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PokemonListContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${pageNumber}`).then(response => {\n        this.props.setPokemons(response.data);\n      });\n    };\n  }\n\n  //метод жизненного цикла компоненты, \n  //компонента монтируется один раз в страницу \n  componentDidMount() {\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`).then(response => {\n      this.props.setPokemons(response.data);\n      console.log(response); // this.props.setTotalPokemonsCount(response.data.length);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(PokemonList, {\n      totalPokemonsCount: this.props.totalPokemonsCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      pokemons: this.props.pokemons,\n      onPageChanged: this.onPageChanged,\n      catchIt: this.props.catchIt,\n      letgo: this.props.letgo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    pokemons: state.pokemonListPage.pokemons,\n    pageSize: state.pokemonListPage.pageSize,\n    totalPokemonsCount: state.pokemonListPage.totalPokemonsCount,\n    currentPage: state.pokemonListPage.currentPage //берем лишь то что нужно компоненте\n    //чтоб не перерисовывался лишний раз стейт\n\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         caught: (pokemonID) => {\n//             dispatch(caughtAC(pokemonID));\n//         },\n//         setPokemons: (pokemons) => {\n//             dispatch(setPokemonsAC(pokemons));\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage));\n//         },\n//         // setTotalPokemonsCount: (totalPokemonsCount) => {\n//         //     dispatch(setTotalPokemonsCountAC(totalPokemonsCount));\n//         // },\n//     }    \n// }\n\n\nexport default connect(mapStateToProps, {\n  catchIt,\n  letgo,\n  setPokemons,\n  setCurrentPage\n})(PokemonListContainer);","map":{"version":3,"sources":["/Users/alexander/Documents/epam/final-project/src/Components/PokemonList/PokemonListContainer.js"],"names":["React","connect","catchIt","letgo","setPokemons","setCurrentPage","axios","PokemonList","PokemonListContainer","Component","onPageChanged","pageNumber","props","get","pageSize","then","response","data","componentDidMount","currentPage","console","log","render","totalPokemonsCount","pokemons","mapStateToProps","state","pokemonListPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,WAAzB,EAAsCC,cAAtC,QAA4D,iCAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,oBAAN,SAAmCR,KAAK,CAACS,SAAzC,CAAmD;AAAA;AAAA;;AAAA,SAWjDC,aAXiD,GAWhCC,UAAD,IAAgB;AAC9B,WAAKC,KAAL,CAAWP,cAAX,CAA0BM,UAA1B;AACAL,MAAAA,KAAK,CAACO,GAAN,CAAW,yCAAwC,KAAKD,KAAL,CAAWE,QAAS,UAASH,UAAW,EAA3F,EACGI,IADH,CACQC,QAAQ,IAAI;AAChB,aAAKJ,KAAL,CAAWR,WAAX,CAAuBY,QAAQ,CAACC,IAAhC;AACD,OAHH;AAID,KAjBgD;AAAA;;AACnD;AACA;AACEC,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,KAAK,CAACO,GAAN,CAAW,yCAAwC,KAAKD,KAAL,CAAWE,QAAS,UAAS,KAAKF,KAAL,CAAWO,WAAY,EAAvG,EACGJ,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKJ,KAAL,CAAWR,WAAX,CAAuBY,QAAQ,CAACC,IAAhC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAFgB,CAGhB;AACD,KALH;AAMD;;AAQDM,EAAAA,MAAM,GAAG;AACP,wBACI,QAAC,WAAD;AACE,MAAA,kBAAkB,EAAE,KAAKV,KAAL,CAAWW,kBADjC;AAEE,MAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWE,QAFvB;AAGE,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWO,WAH1B;AAIE,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWY,QAJvB;AAKE,MAAA,aAAa,EAAE,KAAKd,aALtB;AAME,MAAA,OAAO,EAAE,KAAKE,KAAL,CAAWV,OANtB;AAOE,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWT;AAPpB;AAAA;AAAA;AAAA;AAAA,YADJ;AAaD;;AAhCgD;;AAoCnD,IAAIsB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,QAAQ,EAAEE,KAAK,CAACC,eAAN,CAAsBH,QAD7B;AAEHV,IAAAA,QAAQ,EAAEY,KAAK,CAACC,eAAN,CAAsBb,QAF7B;AAGHS,IAAAA,kBAAkB,EAAEG,KAAK,CAACC,eAAN,CAAsBJ,kBAHvC;AAIHJ,IAAAA,WAAW,EAAEO,KAAK,CAACC,eAAN,CAAsBR,WAJhC,CAKH;AACA;;AANG,GAAP;AASH,CAVD,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAelB,OAAO,CAAEwB,eAAF,EAClB;AAAEvB,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,WAAlB;AAA+BC,EAAAA;AAA/B,CADkB,CAAP,CACuCG,oBADvC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { catchIt, letgo, setPokemons, setCurrentPage } from \"../../redux/pokemonList-reducer\";\nimport axios from \"axios\";\nimport './PokemonList.css';\nimport PokemonList from './PokemonList';\n \nclass PokemonListContainer extends React.Component {\n//метод жизненного цикла компоненты, \n//компонента монтируется один раз в страницу \n  componentDidMount() {\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`)\n      .then(response => {\n        this.props.setPokemons(response.data);\n        console.log(response);\n        // this.props.setTotalPokemonsCount(response.data.length);\n      });\n  }\n  onPageChanged = (pageNumber) => {\n    this.props.setCurrentPage(pageNumber);\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${pageNumber}`)\n      .then(response => {\n        this.props.setPokemons(response.data);\n      });\n  }\n  render() {\n    return (\n        <PokemonList \n          totalPokemonsCount={this.props.totalPokemonsCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          pokemons={this.props.pokemons}\n          onPageChanged={this.onPageChanged}\n          catchIt={this.props.catchIt}\n          letgo={this.props.letgo}\n          \n\n          />\n    )\n  }\n}\n \n\nlet mapStateToProps = (state) => {\n    return {\n        pokemons: state.pokemonListPage.pokemons,\n        pageSize: state.pokemonListPage.pageSize,\n        totalPokemonsCount: state.pokemonListPage.totalPokemonsCount,\n        currentPage: state.pokemonListPage.currentPage,\n        //берем лишь то что нужно компоненте\n        //чтоб не перерисовывался лишний раз стейт\n\n    }\n}\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         caught: (pokemonID) => {\n//             dispatch(caughtAC(pokemonID));\n//         },\n//         setPokemons: (pokemons) => {\n//             dispatch(setPokemonsAC(pokemons));\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage));\n//         },\n//         // setTotalPokemonsCount: (totalPokemonsCount) => {\n//         //     dispatch(setTotalPokemonsCountAC(totalPokemonsCount));\n//         // },\n//     }    \n// }\n\nexport default connect (mapStateToProps, \n    { catchIt, letgo, setPokemons, setCurrentPage }) (PokemonListContainer);"]},"metadata":{},"sourceType":"module"}