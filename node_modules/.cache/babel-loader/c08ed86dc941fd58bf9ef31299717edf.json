{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Documents/epam/final-project/src/Components/PokemonList/PokemonListContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { catchIt, letgo, setPokemons, setCurrentPage } from \"../../redux/pokemonList-reducer\";\nimport axios from \"axios\";\nimport './PokemonList.css';\nimport PokemonList from './PokemonList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PokemonListContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber); // axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${pageNumber}`)\n      //   .then(response => {\n      //     this.props.setPokemons(response.data);\n      //   });\n    };\n  }\n\n  // по умолчанию конструктор перебрасывает свое конструирование на\n  // react.component, поэтому удаляем\n  // constructor(props) {\n  //   super(props);\n  // }\n  //метод жизненного цикла компоненты, \n  //компонента монтируется один раз в страницу \n  componentDidMount() {\n    // axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`)\n    axios.get(`http://localhost:8000/pokemons`).then(response => {\n      if (this.props.pokemons === []) {\n        this.props.setPokemons(this.props.pokemons);\n      } else {\n        this.props.setPokemons(response.data);\n        console.log('componentDidMount!!');\n      } // this.props.setTotalPokemonsCount(response.data.length);\n\n    });\n  } //метод\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(PokemonList, {\n      totalPokemonsCount: this.props.totalPokemonsCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      pokemons: this.props.pokemons,\n      onPageChanged: this.onPageChanged,\n      catchIt: this.props.catchIt,\n      letgo: this.props.letgo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    pokemons: state.pokemonListPage.pokemons,\n    pageSize: state.pokemonListPage.pageSize,\n    totalPokemonsCount: state.pokemonListPage.totalPokemonsCount,\n    currentPage: state.pokemonListPage.currentPage //берем лишь то что нужно компоненте\n    //чтоб не перерисовывался лишний раз стейт\n    //функция берез из стейта значения и передает в пропсы компаненты\n\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         caught: (pokemonID) => {\n//             dispatch(caughtAC(pokemonID));\n//         },\n//         setPokemons: (pokemons) => {\n//             dispatch(setPokemonsAC(pokemons));\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage));\n//         },\n//         // setTotalPokemonsCount: (totalPokemonsCount) => {\n//         //     dispatch(setTotalPokemonsCountAC(totalPokemonsCount));\n//         // },\n//     }    \n// }\n// // функция \n\n\nexport default connect(mapStateToProps, {\n  catchIt,\n  letgo,\n  setPokemons,\n  setCurrentPage\n})(PokemonListContainer);","map":{"version":3,"sources":["/Users/alexander/Documents/epam/final-project/src/Components/PokemonList/PokemonListContainer.js"],"names":["React","connect","catchIt","letgo","setPokemons","setCurrentPage","axios","PokemonList","PokemonListContainer","Component","onPageChanged","pageNumber","props","componentDidMount","get","then","response","pokemons","data","console","log","render","totalPokemonsCount","pageSize","currentPage","mapStateToProps","state","pokemonListPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,WAAzB,EAAsCC,cAAtC,QAA4D,iCAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,oBAAN,SAAmCR,KAAK,CAACS,SAAzC,CAAmD;AAAA;AAAA;;AAAA,SAyBjDC,aAzBiD,GAyBhCC,UAAD,IAAgB;AAC9B,WAAKC,KAAL,CAAWP,cAAX,CAA0BM,UAA1B,EAD8B,CAE9B;AACA;AACA;AACA;AACD,KA/BgD;AAAA;;AACnD;AACA;AAEA;AACA;AACA;AAEA;AACA;AACEE,EAAAA,iBAAiB,GAAG;AAClB;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAW,gCAAX,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,UAAI,KAAKJ,KAAL,CAAWK,QAAX,KAAwB,EAA5B,EAAgC;AAC9B,aAAKL,KAAL,CAAWR,WAAX,CAAuB,KAAKQ,KAAL,CAAWK,QAAlC;AACD,OAFD,MAEO;AACL,aAAKL,KAAL,CAAWR,WAAX,CAAuBY,QAAQ,CAACE,IAAhC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,OANe,CAOhB;;AACD,KATH;AAUD,GAtBgD,CAwBjD;;;AAQAC,EAAAA,MAAM,GAAG;AACP,wBACI,QAAC,WAAD;AACE,MAAA,kBAAkB,EAAE,KAAKT,KAAL,CAAWU,kBADjC;AAEE,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWW,QAFvB;AAGE,MAAA,WAAW,EAAE,KAAKX,KAAL,CAAWY,WAH1B;AAIE,MAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWK,QAJvB;AAKE,MAAA,aAAa,EAAE,KAAKP,aALtB;AAME,MAAA,OAAO,EAAE,KAAKE,KAAL,CAAWV,OANtB;AAOE,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWT;AAPpB;AAAA;AAAA;AAAA;AAAA,YADJ;AAaD;;AA9CgD;;AAkDnD,IAAIsB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHT,IAAAA,QAAQ,EAAES,KAAK,CAACC,eAAN,CAAsBV,QAD7B;AAEHM,IAAAA,QAAQ,EAAEG,KAAK,CAACC,eAAN,CAAsBJ,QAF7B;AAGHD,IAAAA,kBAAkB,EAAEI,KAAK,CAACC,eAAN,CAAsBL,kBAHvC;AAIHE,IAAAA,WAAW,EAAEE,KAAK,CAACC,eAAN,CAAsBH,WAJhC,CAKH;AACA;AACA;;AAPG,GAAP;AASH,CAVD,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAevB,OAAO,CAAEwB,eAAF,EAClB;AAAEvB,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,WAAlB;AAA+BC,EAAAA;AAA/B,CADkB,CAAP,CACwCG,oBADxC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { catchIt, letgo, setPokemons, setCurrentPage } from \"../../redux/pokemonList-reducer\";\nimport axios from \"axios\";\nimport './PokemonList.css';\nimport PokemonList from './PokemonList';\n \nclass PokemonListContainer extends React.Component {\n// по умолчанию конструктор перебрасывает свое конструирование на\n// react.component, поэтому удаляем\n\n// constructor(props) {\n//   super(props);\n// }\n\n//метод жизненного цикла компоненты, \n//компонента монтируется один раз в страницу \n  componentDidMount() {\n    // axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`)\n    axios.get(`http://localhost:8000/pokemons`)\n      .then(response => {\n        if (this.props.pokemons === []) {\n          this.props.setPokemons(this.props.pokemons);\n        } else {\n          this.props.setPokemons(response.data);\n          console.log('componentDidMount!!');\n        }\n        // this.props.setTotalPokemonsCount(response.data.length);\n      });\n  }\n\n  //метод\n  onPageChanged = (pageNumber) => {\n    this.props.setCurrentPage(pageNumber);\n    // axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${pageNumber}`)\n    //   .then(response => {\n    //     this.props.setPokemons(response.data);\n    //   });\n  }\n  render() {\n    return (\n        <PokemonList \n          totalPokemonsCount={this.props.totalPokemonsCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          pokemons={this.props.pokemons}\n          onPageChanged={this.onPageChanged}\n          catchIt={this.props.catchIt}\n          letgo={this.props.letgo}\n          \n\n          />\n    )\n  }\n}\n \n\nlet mapStateToProps = (state) => {\n    return {\n        pokemons: state.pokemonListPage.pokemons,\n        pageSize: state.pokemonListPage.pageSize,\n        totalPokemonsCount: state.pokemonListPage.totalPokemonsCount,\n        currentPage: state.pokemonListPage.currentPage,\n        //берем лишь то что нужно компоненте\n        //чтоб не перерисовывался лишний раз стейт\n        //функция берез из стейта значения и передает в пропсы компаненты\n    }\n}\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         caught: (pokemonID) => {\n//             dispatch(caughtAC(pokemonID));\n//         },\n//         setPokemons: (pokemons) => {\n//             dispatch(setPokemonsAC(pokemons));\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage));\n//         },\n//         // setTotalPokemonsCount: (totalPokemonsCount) => {\n//         //     dispatch(setTotalPokemonsCountAC(totalPokemonsCount));\n//         // },\n//     }    \n// }\n// // функция \n\nexport default connect (mapStateToProps, \n    { catchIt, letgo, setPokemons, setCurrentPage, }) (PokemonListContainer);"]},"metadata":{},"sourceType":"module"}