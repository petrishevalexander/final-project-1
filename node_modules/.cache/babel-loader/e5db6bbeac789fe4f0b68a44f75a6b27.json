{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Documents/epam/react-final-project/src/Components/PokemonList/PokemonList.js\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport './PokemonList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PokemonList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${pageNumber}`).then(response => {\n        this.props.setPokemons(response.data);\n      });\n    };\n  }\n\n  // constructor(props) {\n  //   super(props);   \n  // }\n  //метод жизненного цикла компоненты, \n  //компонента монтируется олдин раз в страницу \n  componentDidMount() {\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`).then(response => {\n      this.props.setPokemons(response.data);\n      this.props.setTotalPokemonsCount(response.data.length);\n    });\n  }\n\n  render() {\n    let pagesCount = Math.ceil(this.props.totalPokemonsCount / this.props.pageSize);\n    let pages = [];\n\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: pages.map(p => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: this.props.currentPage === p ? \"fw-bold fs-5\" : \"\",\n            onClick: () => {\n              this.onPageChanged(p);\n            },\n            children: [\" \", p, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.props.pokemons.map(pokemonItem => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `pokemons/${pokemonItem.id}.png`,\n                className: \"card-img-top\",\n                alt: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: pokemonItem.name.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#\",\n                  className: \"btn btn-primary\",\n                  children: \"CAUGHT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, pokemonItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n\n} // const PokemonList = (props) => {\n//     if (props.pokemons.length === 0) {\n//       axios.get('http://localhost:8000/pokemons')\n//       .then(response => {\n//         // debugger;\n//         props.setPokemons(response.data);\n//       });  \n//     }\n//     //это сайд эффект, хотя мы и сделали заглушку. решение: классновы компонент или\n//     //нарушается правило чистых функций!!\n//     return (\n//         <div className=\"container-xl\">\n//             <div className=\"row\">\n//                 {props.pokemons.map(pokemonItem => {\n//                     return (\n//                         <div className=\"col-md-3\" key={pokemonItem.id}>\n//                             <div className=\"card\" >\n//                                 <img src={`pokemons/${pokemonItem.id}.png`} className=\"card-img-top\" alt=\"image\" />\n//                                 <div className=\"card-body\">\n//                                     <h5 className=\"card-title\">{pokemonItem.name.toUpperCase()}</h5>\n//                                     <a href=\"#\" className=\"btn btn-primary\">CAUGHT</a>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                         )\n//                     }\n//                 )}\n//             </div>\n//         </div>\n//     )\n// }\n\n\nexport default PokemonList;","map":{"version":3,"sources":["/Users/alexander/Documents/epam/react-final-project/src/Components/PokemonList/PokemonList.js"],"names":["axios","React","PokemonList","Component","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setPokemons","data","componentDidMount","currentPage","setTotalPokemonsCount","length","render","pagesCount","Math","ceil","totalPokemonsCount","pages","i","push","map","p","pokemons","pokemonItem","id","name","toUpperCase"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport './PokemonList.css'\n\n\nclass PokemonList extends React.Component {\n  // constructor(props) {\n  //   super(props);   \n  // }\n\n//метод жизненного цикла компоненты, \n//компонента монтируется олдин раз в страницу \n  componentDidMount() {\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`)\n      .then(response => {\n        this.props.setPokemons(response.data);\n        this.props.setTotalPokemonsCount(response.data.length);\n      });\n  }\n\n  onPageChanged = (pageNumber) => {\n    this.props.setCurrentPage(pageNumber);\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${pageNumber}`)\n      .then(response => {\n        this.props.setPokemons(response.data);\n      });\n  }\n\n  render() {\n\n    let pagesCount = Math.ceil(this.props.totalPokemonsCount / this.props.pageSize);\n\n    let pages = [];\n    for (let i=1; i<=pagesCount; i++) {\n        pages.push(i);\n    }\n\n    return (\n        <div className=\"container-xl\">\n            <div>\n                {pages.map ( p => {\n                    return <span className={this.props.currentPage === p ? \"fw-bold fs-5\" : \"\"} \n                    onClick = { () => {this.onPageChanged(p)} } > {p} </span>\n                })}\n                \n            </div>\n            <div className=\"row\">\n                {this.props.pokemons.map(pokemonItem => {\n                    return (\n                        <div className=\"col-md-3\" key={pokemonItem.id}>\n                            <div className=\"card\" >\n                                <img src={`pokemons/${pokemonItem.id}.png`} className=\"card-img-top\" alt=\"image\" />\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{pokemonItem.name.toUpperCase()}</h5>\n                                    <a href=\"#\" className=\"btn btn-primary\">CAUGHT</a>\n                                </div>\n                            </div>\n                        </div>\n                        )\n                    }\n                )}\n            </div>\n        </div>\n    )\n\n  }\n\n}\n\n\n\n\n// const PokemonList = (props) => {\n\n//     if (props.pokemons.length === 0) {\n//       axios.get('http://localhost:8000/pokemons')\n//       .then(response => {\n//         // debugger;\n//         props.setPokemons(response.data);\n//       });  \n//     }\n//     //это сайд эффект, хотя мы и сделали заглушку. решение: классновы компонент или\n//     //нарушается правило чистых функций!!\n\n//     return (\n//         <div className=\"container-xl\">\n//             <div className=\"row\">\n//                 {props.pokemons.map(pokemonItem => {\n//                     return (\n//                         <div className=\"col-md-3\" key={pokemonItem.id}>\n//                             <div className=\"card\" >\n//                                 <img src={`pokemons/${pokemonItem.id}.png`} className=\"card-img-top\" alt=\"image\" />\n//                                 <div className=\"card-body\">\n//                                     <h5 className=\"card-title\">{pokemonItem.name.toUpperCase()}</h5>\n//                                     <a href=\"#\" className=\"btn btn-primary\">CAUGHT</a>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                         )\n//                     }\n//                 )}\n//             </div>\n//         </div>\n//     )\n// }\n\nexport default PokemonList;"]},"metadata":{},"sourceType":"module"}