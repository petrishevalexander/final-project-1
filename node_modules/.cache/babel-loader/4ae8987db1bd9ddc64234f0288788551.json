{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Documents/epam/final-project/src/Components/Pagination/Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = ({\n  totalPokemonsCount,\n  pageSize,\n  currentPage,\n  onPageChanged\n}) => {\n  _s();\n\n  let pagesCount = Math.ceil(totalPokemonsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionSize = 5;\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [currentPortion, setCurrentPortion] = useState(1);\n  let leftNumberOfAPortion = (currentPortion - 1) * portionSize + 1;\n  let rightNumberOfAPortion = currentPortion * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentPortion > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        setCurrentPortion(currentPortion - 1);\n      },\n      children: \"BACK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), pages.filter(p => p >= leftNumberOfAPortion && p <= rightNumberOfAPortion).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: currentPage === p ? \"btn btn-success\" : \"btn btn-outline-success\",\n        onClick: () => {\n          onPageChanged(p);\n        },\n        children: [\" \", p, \" \"]\n      }, p, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 28\n      }, this);\n    }), currentPortion < portionCount && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCurrentPortion(currentPortion + 1);\n      },\n      children: \"MORE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pagination, \"V4DYc41I+sXrhtoIlJAyeD3jz+c=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/alexander/Documents/epam/final-project/src/Components/Pagination/Pagination.js"],"names":["React","useState","Pagination","totalPokemonsCount","pageSize","currentPage","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionSize","portionCount","currentPortion","setCurrentPortion","leftNumberOfAPortion","rightNumberOfAPortion","filter","p","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,kBAAD;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA,WAA/B;AAA4CC,EAAAA;AAA5C,CAAD,KAAgE;AAAA;;AAE/E,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,kBAAkB,GAAGC,QAA/B,CAAjB;AAEA,MAAIM,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAEJ,UAAjB,EAA6BI,CAAC,EAA9B,EAAkC;AAC9BD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,WAAW,GAAG,CAAlB;AACA,MAAIC,YAAY,GAAGN,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGM,WAAvB,CAAnB;AAEA,MAAI,CAACE,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,CAAD,CAAlD;AAEA,MAAIgB,oBAAoB,GAAG,CAACF,cAAc,GAAG,CAAlB,IAAuBF,WAAvB,GAAqC,CAAhE;AACA,MAAIK,qBAAqB,GAAGH,cAAc,GAAGF,WAA7C;AAGA,sBACI;AAAA,eACKE,cAAc,GAAG,CAAjB,iBACG;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM;AAACC,QAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AAAsC,OAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAIKL,KAAK,CACDS,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIH,oBAAL,IAA6BG,CAAC,IAAIF,qBADlD,EAEIG,GAFJ,CAEUD,CAAC,IAAI;AACR,0BAAO;AAAgB,QAAA,IAAI,EAAC,QAArB;AAA8B,QAAA,SAAS,EAAEf,WAAW,KAAKe,CAAhB,GAAoB,iBAApB,GAAwC,yBAAjF;AACP,QAAA,OAAO,EAAK,MAAM;AAACd,UAAAA,aAAa,CAACc,CAAD,CAAb;AAAiB,SAD7B;AAAA,wBACmCA,CADnC;AAAA,SAAaA,CAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AAEP,KALA,CAJL,EAWKL,cAAc,GAAGD,YAAjB,iBACG;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACE,QAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AAAsC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAlCD;;GAAMb,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react';\n\n \nconst Pagination = ({totalPokemonsCount, pageSize, currentPage, onPageChanged}) => {\n\n    let pagesCount = Math.ceil(totalPokemonsCount / pageSize);\n\n    let pages = [];\n    for (let i=1; i<=pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionSize = 5;\n    let portionCount = Math.ceil(pagesCount / portionSize);\n\n    let [currentPortion, setCurrentPortion] = useState(1);\n\n    let leftNumberOfAPortion = (currentPortion - 1) * portionSize + 1;\n    let rightNumberOfAPortion = currentPortion * portionSize;\n\n\n    return(\n        <div>\n            {currentPortion > 1 && \n                <button className=\"btn btn-primary\" onClick={() => {setCurrentPortion(currentPortion - 1)}}>BACK</button>}\n\n            {pages\n                .filter(p => p >= leftNumberOfAPortion && p <= rightNumberOfAPortion)\n                .map ( p => {\n                    return <button key={p} type=\"button\" className={currentPage === p ? \"btn btn-success\" : \"btn btn-outline-success\"} \n                    onClick = { () => {onPageChanged(p)} } > {p} </button>\n            })}\n\n            {currentPortion < portionCount && \n                <button onClick={() => {setCurrentPortion(currentPortion + 1)}}>MORE</button>}\n        </div>\n    )\n}\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}