{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Documents/epam/final-project/src/Components/CaughtPokemon/CaughtPokemonContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { catchIt, letgo, setPokemons } from \"../../redux/pokemonList-reducer\";\nimport CaughtPokemon from './CaughtPokemon'; // import { setTotalCaughtPokemonsCount, setCurrentPageCaught } from \"../../redux/caughtPokemon-reducer\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CaughtPokemonContainer extends React.Component {\n  componentDidMount() {\n    this.props.setPokemons(this.props.pokemons); // let caughtPokemonsCount = 0;\n    // for (let pokemon of this.props.pokemons) {\n    //   if (pokemon.isCaught) {\n    //     caughtPokemonsCount += 1;\n    //   }\n    // }\n    // this.props.setTotalCaughtPokemonsCount(caughtPokemonsCount);\n  } // onPageChangedCaught = (pageNumber) => {\n  //   this.props.setCurrentPageCaught(pageNumber);\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(CaughtPokemon // totalPokemonsCount={this.props.totalPokemonsCount}\n    // pageSize={this.props.pageSize}\n    // currentPageCaught={this.props.currentPageCaught}\n    // onPageChangedCaught={this.onPageChangedCaught}\n    // totalCaughtPokemonsCount={this.props.totalCaughtPokemonsCount}\n    , {\n      catchIt: this.props.catchIt,\n      letgo: this.props.letgo,\n      pokemons: this.props.pokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    pokemons: state.pokemonListPage.pokemons // pageSize: state.pokemonListPage.pageSize,\n    // totalPokemonsCount: state.pokemonListPage.totalPokemonsCount,\n    // currentPageCaught: state.caughtPokemon.currentPageCaught,\n    // totalCaughtPokemonsCount: state.caughtPokemon.totalCaughtPokemonsCount\n    //берем лишь то что нужно компоненте\n    //чтоб не перерисовывался лишний раз стейт\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  catchIt,\n  letgo,\n  setPokemons // setCurrentPageCaught, setTotalCaughtPokemonsCount \n\n})(CaughtPokemonContainer);","map":{"version":3,"sources":["/Users/alexander/Documents/epam/final-project/src/Components/CaughtPokemon/CaughtPokemonContainer.js"],"names":["React","connect","catchIt","letgo","setPokemons","CaughtPokemon","CaughtPokemonContainer","Component","componentDidMount","props","pokemons","render","mapStateToProps","state","pokemonListPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,WAAzB,QAA4C,iCAA5C;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CACA;;;;AAIA,MAAMC,sBAAN,SAAqCN,KAAK,CAACO,SAA3C,CAAqD;AAEnDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,QAAlC,EADkB,CAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AAED,GAbkD,CAenD;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACI,QAAC,aAAD,CACE;AACA;AACA;AACA;AACA;AALF;AAME,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWP,OANtB;AAOE,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWN,KAPpB;AAQE,MAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWC;AARvB;AAAA;AAAA;AAAA;AAAA,YADJ;AAYD;;AAhCkD;;AAoCrD,IAAIE,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,QAAQ,EAAEG,KAAK,CAACC,eAAN,CAAsBJ,QAD7B,CAEH;AACA;AACA;AACA;AAEA;AACA;;AARG,GAAP;AAWH,CAZD;;AAeA,eAAeT,OAAO,CAAEW,eAAF,EAClB;AAAEV,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,WAAlB,CACE;;AADF,CADkB,CAAP,CAGPE,sBAHO,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { catchIt, letgo, setPokemons } from \"../../redux/pokemonList-reducer\";\nimport CaughtPokemon from './CaughtPokemon';\n// import { setTotalCaughtPokemonsCount, setCurrentPageCaught } from \"../../redux/caughtPokemon-reducer\";\n \n\n\nclass CaughtPokemonContainer extends React.Component {\n\n  componentDidMount() {\n    this.props.setPokemons(this.props.pokemons);\n\n    // let caughtPokemonsCount = 0;\n    // for (let pokemon of this.props.pokemons) {\n    //   if (pokemon.isCaught) {\n    //     caughtPokemonsCount += 1;\n    //   }\n    // }\n    // this.props.setTotalCaughtPokemonsCount(caughtPokemonsCount);\n \n  } \n\n  // onPageChangedCaught = (pageNumber) => {\n  //   this.props.setCurrentPageCaught(pageNumber);\n  // }\n\n  render() {\n    return (\n        <CaughtPokemon \n          // totalPokemonsCount={this.props.totalPokemonsCount}\n          // pageSize={this.props.pageSize}\n          // currentPageCaught={this.props.currentPageCaught}\n          // onPageChangedCaught={this.onPageChangedCaught}\n          // totalCaughtPokemonsCount={this.props.totalCaughtPokemonsCount}\n          catchIt={this.props.catchIt}\n          letgo={this.props.letgo}\n          pokemons={this.props.pokemons}\n          />\n    )\n  }\n}\n \n\nlet mapStateToProps = (state) => {\n    return {\n        pokemons: state.pokemonListPage.pokemons,\n        // pageSize: state.pokemonListPage.pageSize,\n        // totalPokemonsCount: state.pokemonListPage.totalPokemonsCount,\n        // currentPageCaught: state.caughtPokemon.currentPageCaught,\n        // totalCaughtPokemonsCount: state.caughtPokemon.totalCaughtPokemonsCount\n        \n        //берем лишь то что нужно компоненте\n        //чтоб не перерисовывался лишний раз стейт\n\n    }\n}\n\n\nexport default connect (mapStateToProps, \n    { catchIt, letgo, setPokemons, \n      // setCurrentPageCaught, setTotalCaughtPokemonsCount \n    }) (CaughtPokemonContainer);"]},"metadata":{},"sourceType":"module"}