{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Documents/epam/react-final-project/src/Components/PokemonList/PokemonListContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { caughtAC, setPokemonsAC, setCurrentPageAC, setTotalPokemonsCountAC } from \"../../redux/pokemonList-reducer\";\nimport axios from \"axios\";\nimport './PokemonList.css';\nimport PokemonList from './PokemonList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PokemonListContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${pageNumber}`).then(response => {\n        this.props.setPokemons(response.data);\n      });\n    };\n  }\n\n  //метод жизненного цикла компоненты, \n  //компонента монтируется один раз в страницу \n  componentDidMount() {\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`).then(response => {\n      this.props.setPokemons(response.data); // this.props.setTotalPokemonsCount(response.data.length);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(PokemonList, {\n      totalPokemonsCount: this.props.totalPokemonsCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      pokemons: this.props.pokemons,\n      onPageChanged: this.onPageChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    pokemons: state.pokemonListPage.pokemons,\n    pageSize: state.pokemonListPage.pageSize,\n    totalPokemonsCount: state.pokemonListPage.totalPokemonsCount,\n    currentPage: state.pokemonListPage.currentPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    caught: pokemonID => {\n      dispatch(caughtAC(pokemonID));\n    },\n    setPokemons: pokemons => {\n      dispatch(setPokemonsAC(pokemons));\n    },\n    setCurrentPage: currentPage => {\n      dispatch(setCurrentPageAC(currentPage));\n    } // setTotalPokemonsCount: (totalPokemonsCount) => {\n    //     dispatch(setTotalPokemonsCountAC(totalPokemonsCount));\n    // },\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonListContainer);","map":{"version":3,"sources":["/Users/alexander/Documents/epam/react-final-project/src/Components/PokemonList/PokemonListContainer.js"],"names":["React","connect","caughtAC","setPokemonsAC","setCurrentPageAC","setTotalPokemonsCountAC","axios","PokemonList","PokemonListContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setPokemons","data","componentDidMount","currentPage","render","totalPokemonsCount","pokemons","mapStateToProps","state","pokemonListPage","mapDispatchToProps","dispatch","caught","pokemonID"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,gBAAlC,EAAoDC,uBAApD,QAAmF,iCAAnF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,oBAAN,SAAmCR,KAAK,CAACS,SAAzC,CAAmD;AAAA;AAAA;;AAAA,SAYjDC,aAZiD,GAYhCC,UAAD,IAAgB;AAC9B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,UAA1B;AACAL,MAAAA,KAAK,CAACQ,GAAN,CAAW,yCAAwC,KAAKF,KAAL,CAAWG,QAAS,UAASJ,UAAW,EAA3F,EACGK,IADH,CACQC,QAAQ,IAAI;AAChB,aAAKL,KAAL,CAAWM,WAAX,CAAuBD,QAAQ,CAACE,IAAhC;AACD,OAHH;AAID,KAlBgD;AAAA;;AAEnD;AACA;AACEC,EAAAA,iBAAiB,GAAG;AAClBd,IAAAA,KAAK,CAACQ,GAAN,CAAW,yCAAwC,KAAKF,KAAL,CAAWG,QAAS,UAAS,KAAKH,KAAL,CAAWS,WAAY,EAAvG,EACGL,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKL,KAAL,CAAWM,WAAX,CAAuBD,QAAQ,CAACE,IAAhC,EADgB,CAEhB;AACD,KAJH;AAKD;;AAUDG,EAAAA,MAAM,GAAG;AACP,wBACI,QAAC,WAAD;AACE,MAAA,kBAAkB,EAAE,KAAKV,KAAL,CAAWW,kBADjC;AAEE,MAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWG,QAFvB;AAGE,MAAA,WAAW,EAAE,KAAKH,KAAL,CAAWS,WAH1B;AAIE,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWY,QAJvB;AAKE,MAAA,aAAa,EAAE,KAAKd;AALtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAWD;;AAhCgD;;AAoCnD,IAAIe,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,QAAQ,EAAEE,KAAK,CAACC,eAAN,CAAsBH,QAD7B;AAEHT,IAAAA,QAAQ,EAAEW,KAAK,CAACC,eAAN,CAAsBZ,QAF7B;AAGHQ,IAAAA,kBAAkB,EAAEG,KAAK,CAACC,eAAN,CAAsBJ,kBAHvC;AAIHF,IAAAA,WAAW,EAAEK,KAAK,CAACC,eAAN,CAAsBN;AAJhC,GAAP;AAOH,CARD;;AAUA,IAAIO,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,MAAM,EAAGC,SAAD,IAAe;AACnBF,MAAAA,QAAQ,CAAC3B,QAAQ,CAAC6B,SAAD,CAAT,CAAR;AACH,KAHE;AAIHb,IAAAA,WAAW,EAAGM,QAAD,IAAc;AACvBK,MAAAA,QAAQ,CAAC1B,aAAa,CAACqB,QAAD,CAAd,CAAR;AACH,KANE;AAOHX,IAAAA,cAAc,EAAGQ,WAAD,IAAiB;AAC7BQ,MAAAA,QAAQ,CAACzB,gBAAgB,CAACiB,WAAD,CAAjB,CAAR;AACH,KATE,CAUH;AACA;AACA;;AAZG,GAAP;AAeH,CAhBD;;AAkBA,eAAepB,OAAO,CAAEwB,eAAF,EAAmBG,kBAAnB,CAAP,CAA+CpB,oBAA/C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { caughtAC, setPokemonsAC, setCurrentPageAC, setTotalPokemonsCountAC } from \"../../redux/pokemonList-reducer\";\nimport axios from \"axios\";\nimport './PokemonList.css';\nimport PokemonList from './PokemonList';\n\nclass PokemonListContainer extends React.Component {\n\n//метод жизненного цикла компоненты, \n//компонента монтируется один раз в страницу \n  componentDidMount() {\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`)\n      .then(response => {\n        this.props.setPokemons(response.data);\n        // this.props.setTotalPokemonsCount(response.data.length);\n      });\n  }\n\n  onPageChanged = (pageNumber) => {\n    this.props.setCurrentPage(pageNumber);\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${pageNumber}`)\n      .then(response => {\n        this.props.setPokemons(response.data);\n      });\n  }\n\n  render() {\n    return (\n        <PokemonList \n          totalPokemonsCount={this.props.totalPokemonsCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          pokemons={this.props.pokemons}\n          onPageChanged={this.onPageChanged}\n          \n\n          />\n    )\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        pokemons: state.pokemonListPage.pokemons,\n        pageSize: state.pokemonListPage.pageSize,\n        totalPokemonsCount: state.pokemonListPage.totalPokemonsCount,\n        currentPage: state.pokemonListPage.currentPage,\n\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        caught: (pokemonID) => {\n            dispatch(caughtAC(pokemonID));\n        },\n        setPokemons: (pokemons) => {\n            dispatch(setPokemonsAC(pokemons));\n        },\n        setCurrentPage: (currentPage) => {\n            dispatch(setCurrentPageAC(currentPage));\n        },\n        // setTotalPokemonsCount: (totalPokemonsCount) => {\n        //     dispatch(setTotalPokemonsCountAC(totalPokemonsCount));\n        // },\n    }\n    \n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (PokemonListContainer);"]},"metadata":{},"sourceType":"module"}