{"ast":null,"code":"var _jsxFileName = \"/Users/alexander/Documents/epam/react-final-project/src/Components/PokemonList/PokemonListContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { caught, setPokemons, setCurrentPage } from \"../../redux/pokemonList-reducer\";\nimport axios from \"axios\";\nimport './PokemonList.css';\nimport PokemonList from './PokemonList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PokemonListContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${pageNumber}`).then(response => {\n        this.props.setPokemons(response.data);\n      });\n    };\n  }\n\n  //метод жизненного цикла компоненты, \n  //компонента монтируется один раз в страницу \n  componentDidMount() {\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`).then(response => {\n      this.props.setPokemons(response.data); // this.props.setTotalPokemonsCount(response.data.length);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(PokemonList, {\n      totalPokemonsCount: this.props.totalPokemonsCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      pokemons: this.props.pokemons,\n      onPageChanged: this.onPageChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    pokemons: state.pokemonListPage.pokemons,\n    pageSize: state.pokemonListPage.pageSize,\n    totalPokemonsCount: state.pokemonListPage.totalPokemonsCount,\n    currentPage: state.pokemonListPage.currentPage //берем лишь то что нужно компоненте\n    //чтоб не перерисовывался лишний раз стейт\n\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         caught: (pokemonID) => {\n//             dispatch(caughtAC(pokemonID));\n//         },\n//         setPokemons: (pokemons) => {\n//             dispatch(setPokemonsAC(pokemons));\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage));\n//         },\n//         // setTotalPokemonsCount: (totalPokemonsCount) => {\n//         //     dispatch(setTotalPokemonsCountAC(totalPokemonsCount));\n//         // },\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  caught: caught,\n  setPokemons: setPokemons,\n  setCurrentPage: setCurrentPage\n})(PokemonListContainer);","map":{"version":3,"sources":["/Users/alexander/Documents/epam/react-final-project/src/Components/PokemonList/PokemonListContainer.js"],"names":["React","connect","caught","setPokemons","setCurrentPage","axios","PokemonList","PokemonListContainer","Component","onPageChanged","pageNumber","props","get","pageSize","then","response","data","componentDidMount","currentPage","render","totalPokemonsCount","pokemons","mapStateToProps","state","pokemonListPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,cAA9B,QAAoD,iCAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,oBAAN,SAAmCP,KAAK,CAACQ,SAAzC,CAAmD;AAAA;AAAA;;AAAA,SAYjDC,aAZiD,GAYhCC,UAAD,IAAgB;AAC9B,WAAKC,KAAL,CAAWP,cAAX,CAA0BM,UAA1B;AACAL,MAAAA,KAAK,CAACO,GAAN,CAAW,yCAAwC,KAAKD,KAAL,CAAWE,QAAS,UAASH,UAAW,EAA3F,EACGI,IADH,CACQC,QAAQ,IAAI;AAChB,aAAKJ,KAAL,CAAWR,WAAX,CAAuBY,QAAQ,CAACC,IAAhC;AACD,OAHH;AAID,KAlBgD;AAAA;;AAEnD;AACA;AACEC,EAAAA,iBAAiB,GAAG;AAClBZ,IAAAA,KAAK,CAACO,GAAN,CAAW,yCAAwC,KAAKD,KAAL,CAAWE,QAAS,UAAS,KAAKF,KAAL,CAAWO,WAAY,EAAvG,EACGJ,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKJ,KAAL,CAAWR,WAAX,CAAuBY,QAAQ,CAACC,IAAhC,EADgB,CAEhB;AACD,KAJH;AAKD;;AAUDG,EAAAA,MAAM,GAAG;AACP,wBACI,QAAC,WAAD;AACE,MAAA,kBAAkB,EAAE,KAAKR,KAAL,CAAWS,kBADjC;AAEE,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWE,QAFvB;AAGE,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWO,WAH1B;AAIE,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWU,QAJvB;AAKE,MAAA,aAAa,EAAE,KAAKZ;AALtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAWD;;AAhCgD;;AAoCnD,IAAIa,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,QAAQ,EAAEE,KAAK,CAACC,eAAN,CAAsBH,QAD7B;AAEHR,IAAAA,QAAQ,EAAEU,KAAK,CAACC,eAAN,CAAsBX,QAF7B;AAGHO,IAAAA,kBAAkB,EAAEG,KAAK,CAACC,eAAN,CAAsBJ,kBAHvC;AAIHF,IAAAA,WAAW,EAAEK,KAAK,CAACC,eAAN,CAAsBN,WAJhC,CAKH;AACA;;AANG,GAAP;AASH,CAVD,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAIA,eAAejB,OAAO,CAAEqB,eAAF,EAAmB;AACrCpB,EAAAA,MAAM,EAAEA,MAD6B;AAErCC,EAAAA,WAAW,EAAEA,WAFwB;AAGrCC,EAAAA,cAAc,EAAEA;AAHqB,CAAnB,CAAP,CAIXG,oBAJW,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { caught, setPokemons, setCurrentPage } from \"../../redux/pokemonList-reducer\";\nimport axios from \"axios\";\nimport './PokemonList.css';\nimport PokemonList from './PokemonList';\n\nclass PokemonListContainer extends React.Component {\n\n//метод жизненного цикла компоненты, \n//компонента монтируется один раз в страницу \n  componentDidMount() {\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${this.props.currentPage}`)\n      .then(response => {\n        this.props.setPokemons(response.data);\n        // this.props.setTotalPokemonsCount(response.data.length);\n      });\n  }\n\n  onPageChanged = (pageNumber) => {\n    this.props.setCurrentPage(pageNumber);\n    axios.get(`http://localhost:8000/pokemons?_limit=${this.props.pageSize}&_page=${pageNumber}`)\n      .then(response => {\n        this.props.setPokemons(response.data);\n      });\n  }\n\n  render() {\n    return (\n        <PokemonList \n          totalPokemonsCount={this.props.totalPokemonsCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          pokemons={this.props.pokemons}\n          onPageChanged={this.onPageChanged}\n          \n\n          />\n    )\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        pokemons: state.pokemonListPage.pokemons,\n        pageSize: state.pokemonListPage.pageSize,\n        totalPokemonsCount: state.pokemonListPage.totalPokemonsCount,\n        currentPage: state.pokemonListPage.currentPage,\n        //берем лишь то что нужно компоненте\n        //чтоб не перерисовывался лишний раз стейт\n\n    }\n}\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         caught: (pokemonID) => {\n//             dispatch(caughtAC(pokemonID));\n//         },\n//         setPokemons: (pokemons) => {\n//             dispatch(setPokemonsAC(pokemons));\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage));\n//         },\n//         // setTotalPokemonsCount: (totalPokemonsCount) => {\n//         //     dispatch(setTotalPokemonsCountAC(totalPokemonsCount));\n//         // },\n//     }\n    \n// }\n\n\n\nexport default connect (mapStateToProps, {\n    caught: caught,\n    setPokemons: setPokemons,\n    setCurrentPage: setCurrentPage,\n}) (PokemonListContainer);"]},"metadata":{},"sourceType":"module"}